// Generated by https://quicktype.io
class Activities {
  List<Activity> items = new List ();
  Activities();

  Activities.fromJsonList (List<dynamic> jsonList){
    if(jsonList == null) return;
    for (var item in jsonList){
      final activity = new Activity.fromJson(item);
      items.add(activity);

    }
  }


}

class Employees {
  List<Employee> items = new List ();

  Employees();

  // Agregar cada empleado recuperado del JSON a la lista
  Employees.fromJsonList (List<dynamic> jsonList){
    if(jsonList == null) return;
    for (var item in jsonList){
      final employee = new Employee.fromJson(item);
      items.add(employee);
    }

  }
}



// Clase employee
class Employee {
  int employeeId;
  String nombres;
  String apellidos;
  String rol;
  List<EmployeeActivity> employeeActivity;
  List<Activity> activities;

// Constructor
  Employee({
    this.employeeId,
    this.nombres,
    this.apellidos,
    this.rol,
    this.employeeActivity,
    this.activities,
  });

  Employee.m({
    this.employeeId,
    this.nombres,
    this.apellidos,
    this.rol
  });

  // Mapear cliente desde API Rest
  Employee.fromJson (Map<String, dynamic> json){
    employeeId         =json['employeeId'];
    nombres            =json['nombres'];
    apellidos          =json['apellidos'];
    rol                =json['rol'];
    employeeActivity   =json['employeeActivity'];
    activities         =json['activities'];
    
  }
}

class Activity {
  int id;
  String description;
  int employeeId;
  String clientId;
  String dateAssignment;

  Activity({
    this.id,
    this.description,
    this.employeeId,
    this.clientId,
    this.dateAssignment,
  });

  Activity.m({
    this.id,
    this.description
  });


  // Mapear Actividades de cada usuario
  Activity.fromJson (Map<String, dynamic> json){
    id             = json['id'];
    description    = json['description'];
    employeeId     = json['employeeId'];
    clientId       = json['clientId'];
    dateAssignment = json['dateAssignment'];
  }

}

class EmployeeActivity {
  int id;
  int activityId;

  EmployeeActivity({
    this.id,
    this.activityId,
  });

}
