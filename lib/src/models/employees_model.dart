// Generated by https://quicktype.io
class Employees {
  List<Employee> items = new List ();

  Employees();

  // Agregar cada empleado recuperado del JSON a la lista
  Employees.fomJsonList (List<dynamic> jsonList){
    if(jsonList == null) return;
    for (var item in jsonList){
      final employee = new Employee.fromJson(item);
      items.add(employee);
    }

  }
}

// Clase employee
class Employee {
  int employeeId;
  String nombres;
  String apellidos;
  String rol;
  List<EmployeeActivity> employeeActivity;
  List<Activity> activities;

// Contructor
  Employee({
    this.employeeId,
    this.nombres,
    this.apellidos,
    this.rol,
    this.employeeActivity,
    this.activities,
  });

  Employee.m({
    this.employeeId,
    this.nombres,
    this.apellidos,
    this.rol
  });

  // Mapear cliente desde API Rest
  Employee.fromJson (Map<String, dynamic> json){
    employeeId         =json['employeeId'];
    nombres            =json['nombres'];
    apellidos          =json['apellidos'];
    rol                =json['rol'];
    employeeActivity   =json['employeeActivity'];
    activities         =json['activities'];
    
  }
}

class Activity {
  int id;
  dynamic description;
  dynamic employeeId;
  dynamic clientId;
  dynamic dateAssignment;

  Activity({
    this.id,
    this.description,
    this.employeeId,
    this.clientId,
    this.dateAssignment,
  });
}

class EmployeeActivity {
  int id;
  int activityId;

  EmployeeActivity({
    this.id,
    this.activityId,
  });

}
